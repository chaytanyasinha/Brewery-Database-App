apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'jacoco'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.kevalpatel2106.brew"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": './schema']
            }
        }

        testInstrumentationRunner "com.kevalpatel2106.brew.UiTestsRunner"

        // Read the local keys
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        buildConfigField "String", "GOOGLE_API_KEY", localProperties['googleApiKey']
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            minifyEnabled false
            pseudoLocalesEnabled false
            zipAlignEnabled true

            resValue "bool", "use_clear_text", "true"
            // Allow cleat text APIs for debug and UI test so that we can use mock web server.
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled false

            resValue "bool", "use_clear_text", "false"
        }
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    testOptions {
        animationsDisabled = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // RX
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Other
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.google.android.material:material:1.1.0'

    // Moshi
    implementation "com.squareup.moshi:moshi:1.9.3"
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'

    // Dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    // Paging
    implementation "androidx.paging:paging-runtime:$paging"
    implementation "androidx.paging:paging-rxjava2:$paging"

    // Room dependencies
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-rxjava2:$room"
    kapt "androidx.room:room-compiler:$room"

    // Android X
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Test libs
    testImplementation 'junit:junit:4.13'
    testImplementation "androidx.test:rules:1.2.0"
    testImplementation "androidx.test:monitor:1.2.0"
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "com.flextrade.jfixture:kfixture:0.2.0"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0-rc01'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.7.2"
    androidTestImplementation "com.flextrade.jfixture:kfixture:0.2.0"
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    kaptAndroidTest "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    kaptAndroidTest "androidx.room:room-compiler:$room"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}
